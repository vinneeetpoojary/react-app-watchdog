{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\tailwind-css\\\\src\\\\Pages\\\\temp.js\";\nimport React from 'react';\nimport { Formik, Form, Field, FieldArray } from 'formik'; // Here is an example of a form with an editable list.\n// Next to each input are buttons for insert and remove.\n// If the list is empty, there is a button to add an item.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Friend List\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 6\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      friends: ['jared', 'ian', 'brent']\n    },\n    onSubmit: values => setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n    }, 500),\n    render: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(FieldArray, {\n        name: \"friends\",\n        render: arrayHelpers => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [values.friends && values.friends.length > 0 ? values.friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: `friends.${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.remove(index) // remove a friend from the list\n              ,\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => arrayHelpers.insert(index, '') // insert an empty string at a position\n              ,\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 24\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 22\n          }, this)) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => arrayHelpers.push(''),\n            children: \"Add a friend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 6\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 4\n}, this);\n_c = FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["D:/projects/tailwind-css/src/Pages/temp.js"],"names":["React","Formik","Form","Field","FieldArray","FriendList","friends","values","setTimeout","alert","JSON","stringify","arrayHelpers","length","map","friend","index","remove","insert","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,QAAgD,QAAhD,C,CAEA;AACA;AACA;;;AACA,OAAO,MAAMC,UAAU,GAAG,mBACxB;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,KAAV,EAAiB,OAAjB;AAAX,KADjB;AAEE,IAAA,QAAQ,EAAEC,MAAM,IACdC,UAAU,CAAC,MAAM;AACfC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACD,KAFS,EAEP,GAFO,CAHd;AAOE,IAAA,MAAM,EAAE,CAAC;AAAEA,MAAAA;AAAF,KAAD,kBACN,QAAC,IAAD;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,MAAM,EAAEK,YAAY,iBAClB;AAAA,qBACGL,MAAM,CAACD,OAAP,IAAkBC,MAAM,CAACD,OAAP,CAAeO,MAAf,GAAwB,CAA1C,GACCN,MAAM,CAACD,OAAP,CAAeQ,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBACjB;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAG,WAAUA,KAAM;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAE,MAAMJ,YAAY,CAACK,MAAb,CAAoBD,KAApB,CAFjB,CAE6C;AAF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,OAAO,EAAE,MAAMJ,YAAY,CAACM,MAAb,CAAoBF,KAApB,EAA2B,EAA3B,CAFjB,CAEiD;AAFjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,aAAUA,KAAV;AAAA;AAAA;AAAA;AAAA,kBADF,CADD,gBAmBC;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,MAAMJ,YAAY,CAACO,IAAb,CAAkB,EAAlB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBJ,eAyBE;AAAA,mCACE;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADK;KAAMd,U","sourcesContent":["import React from 'react';\r\n import { Formik, Form, Field, FieldArray } from 'formik';\r\n \r\n // Here is an example of a form with an editable list.\r\n // Next to each input are buttons for insert and remove.\r\n // If the list is empty, there is a button to add an item.\r\n export const FriendList = () => (\r\n   <div>\r\n     <h1>Friend List</h1>\r\n     <Formik\r\n       initialValues={{ friends: ['jared', 'ian', 'brent'] }}\r\n       onSubmit={values =>\r\n         setTimeout(() => {\r\n           alert(JSON.stringify(values, null, 2));\r\n         }, 500)\r\n       }\r\n       render={({ values }) => (\r\n         <Form>\r\n           <FieldArray\r\n             name=\"friends\"\r\n             render={arrayHelpers => (\r\n               <div>\r\n                 {values.friends && values.friends.length > 0 ? (\r\n                   values.friends.map((friend, index) => (\r\n                     <div key={index}>\r\n                       <Field name={`friends.${index}`} />\r\n                       <button\r\n                         type=\"button\"\r\n                         onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                       >\r\n                         -\r\n                       </button>\r\n                       <button\r\n                         type=\"button\"\r\n                         onClick={() => arrayHelpers.insert(index, '')} // insert an empty string at a position\r\n                       >\r\n                         +\r\n                       </button>\r\n                     </div>\r\n                   ))\r\n                 ) : (\r\n                   <button type=\"button\" onClick={() => arrayHelpers.push('')}>\r\n                     {/* show this when user has removed all friends from the list */}\r\n                     Add a friend\r\n                   </button>\r\n                 )}\r\n                 <div>\r\n                   <button type=\"submit\">Submit</button>\r\n                 </div>\r\n               </div>\r\n             )}\r\n           />\r\n         </Form>\r\n       )}\r\n     />\r\n   </div>\r\n );"]},"metadata":{},"sourceType":"module"}