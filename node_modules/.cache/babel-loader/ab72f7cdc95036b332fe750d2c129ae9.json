{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\tailwind-css\\\\src\\\\Pages\\\\ResidentDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  firstName: \"\",\n  secondName: \"\",\n  email: \"\",\n  contact: [\"\", \"\"],\n  buildingCode: \"\",\n  password: \"\",\n  fullName: {\n    firstName: \"\",\n    secondName: \"\"\n  }\n};\n\nconst onSubmit = values => {\n  console.log(values);\n};\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required(\"First Name Required\"),\n  secondName: Yup.string().required(\"Second Name Required\"),\n  email: Yup.string().email(\"Invalid Email\").required(\"Email ID Required\"),\n  contact: Yup.number().typeError(\"Invalid Contact Number \").required(\"Contact Number Required\"),\n  buildingCode: Yup.string().required(\"Required Building Code\"),\n  password: Yup.string().required(\"Required Password\")\n});\n\nfunction ResidentDetails() {\n  _s();\n\n  const [formStep, setFormStep] = React.useState(0);\n\n  const Next = () => {\n    setFormStep(cur => cur + 1);\n  };\n\n  const RenderButton = () => {\n    if (formStep > 1) {\n      return undefined;\n    } else if (formStep === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Next,\n          type: \"button\",\n          className: \"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Next,\n          type: \"button\",\n          className: \"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-10 flex  justify-center items-center  sm:mx-auto sm:max-w-md sm:w-full py-6 px-4 shadow rounded-xl sm:px-6\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mb-6 space-y-6 grid justify-center\",\n          children: formStep === 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-medium text-yellow-500 uppercase flex justify-center\",\n              children: \"Personal Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-2 \",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-base font-medium text-gray-700 uppercase mb-2\",\n                htmlFor: \"firstName\",\n                children: \"Enter First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-base font-medium text-gray-700 uppercase mb-2\",\n                htmlFor: \"secondName\",\n                children: \"Enter Second Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"w-full border border-gray-300 px-3 py-2 rounded-lg shadow-sm focus:outline-none focus:border-gray-300 focus:ring-2 focus:ring-gray-300 space-x-4\",\n                type: \"text\",\n                id: \"firstname\",\n                name: \"firstName\",\n                placeholder: \"Enter First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"w-full border border-gray-300 px-3 py-2 rounded-lg shadow-sm focus:outline-none focus:border-gray-300 focus:ring-2 focus:ring-gray-300\",\n                type: \"text\",\n                id: \"secondname\",\n                placeholder: \"Enter Second Name\",\n                name: \"secondName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"firstName\",\n                children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-red-500\",\n                  children: errorMsg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"secondName\",\n                children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-red-500\",\n                  children: errorMsg\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResidentDetails, \"LEPpq0gMYYbrX3PjsPtOEX1Ldhc=\");\n\n_c = ResidentDetails;\nexport default ResidentDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidentDetails\");","map":{"version":3,"sources":["D:/projects/tailwind-css/src/Pages/ResidentDetails.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","initialValues","firstName","secondName","email","contact","buildingCode","password","fullName","onSubmit","values","console","log","validationSchema","object","string","required","number","typeError","ResidentDetails","formStep","setFormStep","useState","Next","cur","RenderButton","undefined","errorMsg"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Formik,Form,Field,ErrorMessage} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues ={\r\n    firstName:\"\",\r\n    secondName:\"\",\r\n    email:\"\",\r\n    contact:[\"\",\"\"],\r\n    buildingCode:\"\",\r\n    password:\"\",\r\n    fullName:{\r\n        firstName:\"\",\r\n        secondName:\"\"\r\n    },\r\n}\r\nconst onSubmit =values=>{\r\n    console.log(values)\r\n}\r\nconst validationSchema = Yup.object({\r\n    \r\n    firstName:Yup.string().required(\"First Name Required\"),\r\n    secondName:Yup.string().required(\"Second Name Required\"),\r\n    email:Yup.string().email(\"Invalid Email\").required(\"Email ID Required\"),\r\n    contact:Yup.number().typeError(\"Invalid Contact Number \").required(\"Contact Number Required\"),\r\n    buildingCode:Yup.string().required(\"Required Building Code\"),\r\n    password:Yup.string().required(\"Required Password\"),\r\n})\r\nfunction ResidentDetails() {\r\n    const [formStep,setFormStep]=React.useState(0);\r\n    const Next=()=>{\r\n        setFormStep(cur=>cur +1);\r\n    }\r\n    const RenderButton =()=>{\r\n        if (formStep >1){\r\n            return undefined;\r\n        }else if (formStep === 1){\r\n            return(\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                    onClick={Next}\r\n                    type=\"button\"\r\n                    className=\"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\">\r\n                       Create User\r\n                        </button>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                    onClick={Next}\r\n                    type=\"button\"\r\n                    className=\"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\">\r\n                       Next\r\n                        </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        <div className=\"h-screen\">\r\n        <div className=\"mt-10 flex  justify-center items-center  sm:mx-auto sm:max-w-md sm:w-full py-6 px-4 shadow rounded-xl sm:px-6\">\r\n        <Form className=\"mb-6 space-y-6 grid justify-center\">\r\n        { formStep===0 && <section>\r\n     <h1 className=\"text-3xl font-medium text-yellow-500 uppercase flex justify-center\">Personal Details</h1>\r\n    <div className=\"grid grid-cols-2 \">\r\n  \r\n    <label className=\"block text-base font-medium text-gray-700 uppercase mb-2\" htmlFor=\"firstName\">Enter First Name</label>\r\n    <label className=\"block text-base font-medium text-gray-700 uppercase mb-2\" htmlFor=\"secondName\">Enter Second Name</label>\r\n    <Field className=\"w-full border border-gray-300 px-3 py-2 rounded-lg shadow-sm focus:outline-none focus:border-gray-300 focus:ring-2 focus:ring-gray-300 space-x-4\"\r\n     type=\"text\"\r\n      id=\"firstname\"\r\n       name=\"firstName\"\r\n       placeholder=\"Enter First Name\"\r\n       />    \r\n    <Field className=\"w-full border border-gray-300 px-3 py-2 rounded-lg shadow-sm focus:outline-none focus:border-gray-300 focus:ring-2 focus:ring-gray-300\"\r\n     type=\"text\"\r\n      id=\"secondname\"\r\n       placeholder=\"Enter Second Name\" \r\n       name=\"secondName\"\r\n       />      \r\n      <ErrorMessage name=\"firstName\">\r\n          {\r\n              errorMsg=><div className=\"text-red-500\">{errorMsg}</div>\r\n          }\r\n      </ErrorMessage>\r\n      <ErrorMessage name=\"secondName\">\r\n      {\r\n              errorMsg=><div className=\"text-red-500\">{errorMsg}</div>\r\n          }\r\n      </ErrorMessage>\r\n    </div>\r\n        </section>}\r\n        </Form>\r\n        </div>\r\n        </div>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default ResidentDetails\r\n"]},"metadata":{},"sourceType":"module"}