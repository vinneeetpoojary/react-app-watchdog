{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\tailwind-css\\\\src\\\\Pages\\\\ResidentDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  firstName: \"\",\n  secondName: \"\",\n  email: \"\",\n  contact: [\"\", \"\"],\n  buildingCode: \"\",\n  password: \"\",\n  fullName: {\n    firstName: \"\",\n    secondName: \"\"\n  },\n  familyMembers: [\" \"]\n};\n\nconst onSubmit = values => {\n  console.log(values);\n};\n\nconst validationSchema = Yup.object({\n  firstName: Yup.string().required(\"First Name Required\"),\n  secondName: Yup.string().required(\"Second Name Required\"),\n  email: Yup.string().email(\"Invalid Email\").required(\"Email ID Required\"),\n  contact: Yup.number().typeError(\"Invalid Contact Number \").required(\"Contact Number Required\"),\n  wing: Yup.string().required(\"Required Wing\"),\n  room: Yup.string().required(\"Required Room Number\"),\n  password: Yup.string().required(\"Required Password\")\n});\n\nfunction ResidentDetails() {\n  _s();\n\n  const [formStep, setFormStep] = React.useState(0);\n\n  const Next = () => {\n    setFormStep(cur => cur + 1);\n  };\n\n  const Back = () => {\n    setFormStep(cur => cur - 1);\n  };\n\n  const RenderBackButton = () => {\n    if (formStep === 0) {\n      return undefined;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Back,\n          type: \"button\",\n          className: \"py-2 px-4 border rounded bg-gray-500 text-white focus:outline-none focus:ring-2 focus:ring-gray-300 hover:bg-gray-700 focus:ring-offset-2\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const RenderButton = () => {\n    if (formStep > 3) {\n      return undefined;\n    } else if (formStep === 3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Next,\n          type: \"button\",\n          className: \"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\",\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: Next,\n          type: \"button\",\n          className: \"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResidentDetails, \"LEPpq0gMYYbrX3PjsPtOEX1Ldhc=\");\n\n_c = ResidentDetails;\nexport default ResidentDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidentDetails\");","map":{"version":3,"sources":["D:/projects/tailwind-css/src/Pages/ResidentDetails.js"],"names":["React","Formik","Form","Field","ErrorMessage","FieldArray","Yup","initialValues","firstName","secondName","email","contact","buildingCode","password","fullName","familyMembers","onSubmit","values","console","log","validationSchema","object","string","required","number","typeError","wing","room","ResidentDetails","formStep","setFormStep","useState","Next","cur","Back","RenderBackButton","undefined","RenderButton"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Formik,Form,Field,ErrorMessage,FieldArray} from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues ={\r\n    firstName:\"\",\r\n    secondName:\"\",\r\n    email:\"\",\r\n    contact:[\"\",\"\"],\r\n    buildingCode:\"\",\r\n    password:\"\",\r\n    fullName:{\r\n        firstName:\"\",\r\n        secondName:\"\"\r\n    },\r\n    familyMembers:[\" \"],\r\n}\r\nconst onSubmit =values=>{\r\n    console.log(values)\r\n}\r\nconst validationSchema = Yup.object({\r\n    \r\n    firstName:Yup.string().required(\"First Name Required\"),\r\n    secondName:Yup.string().required(\"Second Name Required\"),\r\n    email:Yup.string().email(\"Invalid Email\").required(\"Email ID Required\"),\r\n    contact:Yup.number().typeError(\"Invalid Contact Number \").required(\"Contact Number Required\"),\r\n    wing:Yup.string().required(\"Required Wing\"),\r\n    room:Yup.string().required(\"Required Room Number\"),\r\n    password:Yup.string().required(\"Required Password\"),\r\n})\r\nfunction ResidentDetails() {\r\n    const [formStep,setFormStep]=React.useState(0);\r\n    const Next=()=>{\r\n        setFormStep(cur=>cur +1);\r\n    }\r\n    const Back=()=>{\r\n        setFormStep(cur=>cur-1);\r\n    }\r\n    const RenderBackButton =()=>{\r\n        if (formStep === 0){\r\n            return undefined\r\n        }else{\r\n            return(\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                    onClick={Back}\r\n                    type=\"button\"\r\n                    className=\"py-2 px-4 border rounded bg-gray-500 text-white focus:outline-none focus:ring-2 focus:ring-gray-300 hover:bg-gray-700 focus:ring-offset-2\">\r\n                      Back\r\n                        </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    const RenderButton =()=>{\r\n        if (formStep >3){\r\n            return undefined;\r\n        }else if (formStep === 3){\r\n            return(\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                    onClick={Next}\r\n                    type=\"button\"\r\n                    className=\"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\">\r\n                       Create User\r\n                        </button>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"flex items-center justify-center\">\r\n                    <button\r\n                    onClick={Next}\r\n                    type=\"button\"\r\n                    className=\"py-2 px-4 border rounded bg-yellow-500 text-white focus:outline-none focus:ring-2 focus:ring-yellow-300 hover:bg-yellow-700 focus:ring-offset-2\">\r\n                       Next\r\n                        </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n         validationSchema={validationSchema}\r\n          onSubmit={onSubmit}\r\n          />\r\n              \r\n       \r\n    )\r\n}\r\n\r\nexport default ResidentDetails\r\n"]},"metadata":{},"sourceType":"module"}