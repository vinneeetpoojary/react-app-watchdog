{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\tailwind-css\\\\src\\\\Pages\\\\Temp.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport FormikControl from '../Components/FormComponents/FormikControl';\nimport Button from '../Components/FormComponents/Button';\nimport FormHeader from '../Components/FormComponents/FormHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dropdownOptions = [{\n  key: \"select an Option\",\n  value: \"\"\n}, {\n  key: \"101\",\n  value: \"101\"\n}, {\n  key: \"102\",\n  value: \"102\"\n}, {\n  key: \"103\",\n  value: \"103\"\n}, {\n  key: \"104\",\n  value: \"104\"\n}, {\n  key: \"105\",\n  value: \"105\"\n}];\nconst radioOptions = [{\n  key: \"Male\",\n  value: \"Male\"\n}, {\n  key: \"Female\",\n  value: \"Female\"\n}];\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  address: \"\",\n  roomno: \"\",\n  gender: \"\"\n};\nconst validationSchema = Yup.object({\n  email: Yup.string().required(\"Email ID is required\").email(\"Invalid Email id\"),\n  password: Yup.string().required(\"Password is required\"),\n  address: Yup.string().required(\"Address is Required\"),\n  roomno: Yup.string().required(\"Room Number is Reqired\"),\n  gender: Yup.string().required(\"Required\")\n});\n\nconst onSubmit = values => {\n  console.log(\"form data\", values);\n};\n\nfunction Temp() {\n  _s();\n\n  const [formStep, setFormStep] = React.useState(0);\n\n  const Next = () => setFormStep(cur => cur + 1);\n\n  const Back = () => setFormStep(cur => cur - 1);\n\n  const RenderNextButton = () => {\n    if (formStep > 3) {\n      return undefined;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: Next,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: Back,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen \",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: formik => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"grid justify-center border-md\",\n        children: [/*#__PURE__*/_jsxDEV(FormHeader, {\n          children: \"Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 26\n        }, this), formStep === 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"email\",\n            label: \"Enter Email ID\",\n            name: \"email\",\n            placeholder: \"Enter Email ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"password\",\n            label: \"Enter Password \",\n            name: \"password\",\n            placeholder: \"Enter Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 45\n        }, this), formStep === 1 && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"textarea\",\n            label: \"Enter Your Address\",\n            name: \"address\",\n            placeholder: \"Enter Your Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 46\n        }, this), formStep === 2 && /*#__PURE__*/_jsxDEV(\"section\", {\n          children: /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"select\",\n            name: \"roomno\",\n            label: \"select room no \",\n            options: dropdownOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 35\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"radio\",\n          name: \"gender\",\n          label: \"gender\",\n          options: radioOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), RenderButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Temp, \"LEPpq0gMYYbrX3PjsPtOEX1Ldhc=\");\n\n_c = Temp;\nexport default Temp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temp\");","map":{"version":3,"sources":["D:/projects/tailwind-css/src/Pages/Temp.js"],"names":["React","Formik","Form","Yup","FormikControl","Button","FormHeader","dropdownOptions","key","value","radioOptions","initialValues","email","password","address","roomno","gender","validationSchema","object","string","required","onSubmit","values","console","log","Temp","formStep","setFormStep","useState","Next","cur","Back","RenderNextButton","undefined","formik","RenderButton"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {Formik,Form} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from '../Components/FormComponents/FormikControl';\r\nimport Button from '../Components/FormComponents/Button';\r\nimport FormHeader from '../Components/FormComponents/FormHeader';\r\n\r\nconst dropdownOptions=[\r\n    {key:\"select an Option\", value:\"\"},\r\n    {key:\"101\", value:\"101\"},\r\n    {key:\"102\", value:\"102\"},\r\n    {key:\"103\", value:\"103\"},\r\n    {key:\"104\", value:\"104\"},\r\n    {key:\"105\", value:\"105\"},\r\n]\r\n\r\nconst radioOptions=[\r\n  \r\n    {key:\"Male\", value:\"Male\"},\r\n    {key:\"Female\", value:\"Female\"},\r\n]\r\n\r\nconst initialValues={\r\n    email:\"\",\r\n    password:\"\",\r\n    address:\"\",\r\n    roomno:\"\",\r\n    gender:\"\",\r\n}\r\nconst validationSchema=Yup.object({\r\n    email:Yup.string().required(\"Email ID is required\").email(\"Invalid Email id\"),\r\n    password:Yup.string().required(\"Password is required\"),\r\n    address:Yup.string().required(\"Address is Required\"),\r\n    roomno:Yup.string().required(\"Room Number is Reqired\"),\r\n    gender:Yup.string().required(\"Required\"),\r\n})\r\nconst onSubmit=values=>{console.log(\"form data\",values)}\r\n\r\nfunction Temp() {\r\n   const [formStep,setFormStep]=React.useState(0);\r\n    const Next=()=>setFormStep(cur=>cur+1)\r\n    const Back=()=>setFormStep(cur=>cur-1)\r\n    const RenderNextButton=()=>{\r\n        if (formStep > 3){\r\n            return undefined\r\n        }else{\r\n            return(\r\n                <div className=\"grid grid-cols-2\"> \r\n                <Button variant=\"primary\" onClick={Next} >Next</Button>\r\n                 <Button variant=\"secondary\" onClick={Back} >Back</Button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"h-screen \">\r\n            <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}\r\n        >\r\n            {\r\n                formik =>(\r\n                    <Form className=\"grid justify-center border-md\">\r\n                         <FormHeader>Login Form</FormHeader>\r\n                        {\r\n                            formStep===0 && <section>\r\n                                 <FormikControl control=\"input\" type=\"email\" label=\"Enter Email ID\" name=\"email\" placeholder=\"Enter Email ID\"/>\r\n                                <FormikControl control=\"input\" type=\"password\" label=\"Enter Password \" name=\"password\" placeholder=\"Enter Password \"/>\r\n                            </section>\r\n                        }\r\n                        {\r\n                             formStep===1 && <section>\r\n                                 <FormikControl control=\"textarea\" label=\"Enter Your Address\" name=\"address\" placeholder=\"Enter Your Address \"/>\r\n                             </section>\r\n                        }\r\n                        {\r\n                             formStep===2 && <section>\r\n                                  <FormikControl control=\"select\" name=\"roomno\" label=\"select room no \" options={dropdownOptions}/>\r\n                             </section>\r\n                        }\r\n                       \r\n                        <FormikControl control=\"radio\" name=\"gender\" label=\"gender\" options={radioOptions}/>\r\n                       {RenderButton()}\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n"]},"metadata":{},"sourceType":"module"}